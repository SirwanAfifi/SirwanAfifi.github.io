{"version":3,"sources":["webpack:///./src/pages/archive.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["ArchivePage","data","_public_static_d_2733015887_json__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","allMarkdownRemark","edges","map","_ref","index","node","newslug","fields","slug","match","join","replace","slice","key","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","frontmatter","title","style","marginLeft","formattedDate","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","Header","_1722380830","react_default","className","gatsby_browser_entry","src","alt","site","siteMetadata","author","description","Footer","_2400972307","id","href","Layout","props","header","children","footer","Helmet_default"],"mappings":"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","file":"component---src-pages-archive-js-0b918781844e7be67069.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\";\nimport { graphql, useStaticQuery, Link } from \"gatsby\";\n\nconst ArchivePage = () => {\n  const data = useStaticQuery(graphql`\n      query {\n  allMarkdownRemark(\n    sort: { fields: [frontmatter___date], order: DESC }\n  ) {\n    edges {\n      node {\n        frontmatter {\n          title\n          formattedDate: date(formatString: \"MMMM Do, YYYY\")\n          date\n          slug\n        }\n        html\n        excerpt\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}`);\n\n  return <Layout>\n    <h1>Archives</h1>\n    <ul>\n      {data.allMarkdownRemark.edges.map(({ node }, index) => {\n        const pattern = /\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])-/gm;\n        const newslug = node.fields.slug.match(pattern).join().replace(/\\-/g, \"/\").slice(0, -1);\n        return (<li key={index}>\n          <span>\n            <Link to={`archive/${newslug}/${node.frontmatter.slug}`}>\n              {node.frontmatter.title}\n            </Link>\n            <time style={{ marginLeft: 5 }}>{node.frontmatter.formattedDate}</time>\n          </span>\n        </li>);\n      })}\n    </ul>\n  </Layout>\n};\n\nexport default ArchivePage;","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link, graphql, useStaticQuery } from 'gatsby';\n\nconst Header = () => {\n    const data = useStaticQuery(graphql`query {\n        site {\n          siteMetadata {\n            author\n            description\n            email\n            title\n            twitter_username\n            url\n          }\n        }\n      }\n      `);\n\n    return (<header className=\"masthead\">\n        <div className=\"masthead-inner\">\n            <div className=\"profilepic\">\n                <Link to=\"/\"><img src=\"/avatar.png\" alt=\"Profile Picture\" /></Link>\n            </div>\n            <h2>{data.site.siteMetadata.author}</h2>\n            <p className=\"lead\">{data.site.siteMetadata.description}</p>\n\n            <div className=\"colophon\">\n                <ul className=\"colophon-links\">\n                    <li>\n                        <Link to=\"/about\">about</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/archive\">archives</Link>\n                    </li>\n                    <li>\n                        <Link to=\"#\">contact</Link>\n                    </li>\n                </ul>\n                <p>© 2019. {data.site.siteMetadata.author} All rights reserved.</p>\n            </div>\n        </div>\n    </header>)\n};\n\nexport default Header;","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nconst Footer = () => {\n    const data = useStaticQuery(graphql`query {\n        site {\n          siteMetadata {\n            author\n          }\n        }\n      }\n      `);\n\n    return <footer id=\"footer\" className=\"inner\">\n        <div className=\"container\">\n            <div>\n                <div className=\"col-md-12\">\n                    <p>\n                        Copyright © 2019 - {data.site.siteMetadata.author} | Powered by Gatsby |  Site design based on the <a href=\"http://hyde.getpoole.com/\">Hyde theme</a>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </footer>\n};\n\nexport default Footer;","import React from 'react';\nimport Helmet from 'react-helmet'\nimport '../styles/sass/main.scss';\nimport '../styles/hyde.css';\nimport '../styles/syntax.css';\nimport Header from './header';\nimport Footer from './footer';\n\nconst Layout = (props) => {\n    return <div>\n\n        <Header />\n\n        <div className=\"content container\">\n            {props.children}\n        </div>\n\n        <Footer />\n\n        <Helmet>\n            <body className=\"theme-base-0d\" />\n        </Helmet>\n    </div>\n};\n\nexport default Layout;"],"sourceRoot":""}