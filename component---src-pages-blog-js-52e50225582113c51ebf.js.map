{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/pages/blog.js"],"names":["Header","data","useStaticQuery","className","to","src","alt","site","siteMetadata","author","description","Date","getFullYear","Footer","id","href","Layout","props","children","BlogPage","allMarkdownRemark","edges","map","edge","index","newslug","node","fields","slug","match","join","replace","slice","key","frontmatter","title","date","excerpt"],"mappings":"8MAoDeA,EAjDA,WACb,IAAMC,EAAOC,YAAe,cAe5B,OACE,4BAAQC,UAAU,YAChB,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAMC,GAAG,SACP,yBAAKC,IAAI,cAAcC,IAAI,sBAG/B,4BAAKL,EAAKM,KAAKC,aAAaC,QAC5B,uBAAGN,UAAU,QAAQF,EAAKM,KAAKC,aAAaE,aAE5C,yBAAKP,UAAU,YACb,wBAAIA,UAAU,kBACZ,4BACE,kBAAC,IAAD,CAAMC,GAAG,UAAT,UAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,KAAT,aAGJ,iCACK,IAAIO,MAAOC,cADhB,KACiCX,EAAKM,KAAKC,aAAaC,OADxD,6BCXKI,EA5BA,WACb,IAAMZ,EAAOC,YAAe,aAU5B,OACE,4BAAQY,GAAG,SAASX,UAAU,SAC5B,yBAAKA,UAAU,aACb,6BACE,yBAAKA,UAAU,aACb,2CACe,IAAIQ,MAAOC,cAD1B,KAC2C,IACxCX,EAAKM,KAAKC,aAAaC,OAF1B,mDAGe,uBAAGM,KAAK,6BAAR,oBCEZC,IAhBA,SAAAC,GACb,OACE,6BACE,kBAAC,EAAD,MAEA,yBAAKd,UAAU,qBAAqBc,EAAMC,UAE1C,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,0BAAMf,UAAU,sB,gFClBxB,6EAuDegB,UAlDE,WACf,IAAMlB,EAAOC,YAAe,cAmB5B,OAAO,kBAAC,IAAD,KACL,yBAAKC,UAAU,SACZF,EAAKmB,kBAAkBC,MAAMC,KAAI,SAACC,EAAMC,GACvC,IACMC,EAAUF,EAAKG,KAAKC,OAAOC,KAAKC,MADtB,yDACqCC,OAAOC,QAAQ,MAAO,KAAKC,MAAM,GAAI,GAC1F,OAAO,yBAAK7B,UAAU,OAAO8B,IAAKT,GAChC,wBAAIrB,UAAU,cACZ,kBAAC,IAAD,CAAMC,GAAE,WAAaqB,EAAb,IAAwBF,EAAKG,KAAKQ,YAAYN,MACnDL,EAAKG,KAAKQ,YAAYC,QAI3B,0BAAMhC,UAAU,aAAaoB,EAAKG,KAAKQ,YAAYE,MAElDb,EAAKG,KAAKW,aAKjB,kBAAC,IAAD,KACE,uDAGF,yBAAKlC,UAAU,cACb,kBAAC,IAAD,CAAMC,GAAG,YACT,kBAAC,IAAD,CAAMA,GAAG,WAAT","file":"component---src-pages-blog-js-52e50225582113c51ebf.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\n\nconst Header = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          author\n          description\n          email\n          title\n          twitter_username\n          url\n        }\n      }\n    }\n  `)\n\n  return (\n    <header className=\"masthead\">\n      <div className=\"masthead-inner\">\n        <div className=\"profilepic\">\n          <Link to=\"/blog\">\n            <img src=\"/avatar.png\" alt=\"Profile Picture\" />\n          </Link>\n        </div>\n        <h2>{data.site.siteMetadata.author}</h2>\n        <p className=\"lead\">{data.site.siteMetadata.description}</p>\n\n        <div className=\"colophon\">\n          <ul className=\"colophon-links\">\n            <li>\n              <Link to=\"/about\">about</Link>\n            </li>\n            <li>\n              <Link to=\"/archive\">archives</Link>\n            </li>\n            <li>\n              <Link to=\"#\">contact</Link>\n            </li>\n          </ul>\n          <p>\n            © {new Date().getFullYear()}. {data.site.siteMetadata.author} All\n            rights reserved.\n          </p>\n        </div>\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst Footer = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <footer id=\"footer\" className=\"inner\">\n      <div className=\"container\">\n        <div>\n          <div className=\"col-md-12\">\n            <p>\n              Copyright © {new Date().getFullYear()} -{\" \"}\n              {data.site.siteMetadata.author} | Powered by Gatsby | Site design\n              based on the <a href=\"http://hyde.getpoole.com/\">Hyde theme</a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport \"../styles/sass/main.scss\"\nimport \"../styles/hyde.css\"\nimport \"../styles/syntax.css\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\n\nconst Layout = props => {\n  return (\n    <div>\n      <Header />\n\n      <div className=\"content container\">{props.children}</div>\n\n      <Footer />\n\n      <Helmet>\n        <body className=\"theme-base-0d\" />\n      </Helmet>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport Layout from \"../components/layout\";\nimport { graphql, useStaticQuery, Link } from \"gatsby\";\nimport Helmet from 'react-helmet'\n\nconst BlogPage = () => {\n  const data = useStaticQuery(graphql`query {\n        allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, limit: 10) {\n          edges {\n            node {\n              frontmatter {\n                title\n                date(formatString: \"MMMM Do, YYYY\")\n                slug\n              }\n              html\n              excerpt\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }`);\n\n  return <Layout>\n    <div className=\"posts\">\n      {data.allMarkdownRemark.edges.map((edge, index) => {\n        const pattern = /\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])-/gm;\n        const newslug = edge.node.fields.slug.match(pattern).join().replace(/\\-/g, \"/\").slice(0, -1);\n        return <div className=\"post\" key={index}>\n          <h1 className=\"post-title\">\n            <Link to={`archive/${newslug}/${edge.node.frontmatter.slug}`}>\n              {edge.node.frontmatter.title}\n            </Link>\n          </h1>\n\n          <span className=\"post-date\">{edge.node.frontmatter.date}</span>\n\n          {edge.node.excerpt}\n\n        </div>\n      })}\n    </div>\n    <Helmet>\n      <title>Home | Sirwan Afifi</title>\n    </Helmet>\n\n    <div className=\"pagination\">\n      <Link to=\"/page/2\"></Link>\n      <Link to=\"/page/2\">More</Link>\n    </div>\n  </Layout>\n};\n\nexport default BlogPage;"],"sourceRoot":""}