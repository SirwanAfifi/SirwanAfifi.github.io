{"componentChunkName":"component---src-templates-blog-details-js","path":"/blog/en/react-hooks","result":{"data":{"markdownRemark":{"frontmatter":{"date":"October 27th, 2018","title":"React Hooks","tags":["ReactJS","TypeScript","JavaScript"],"slug":"React-Hooks/"},"html":"<p>Hooks are a new feature that is coming up in React v16.7.0-alpha, it's a really great feature, I am so excited about this new feature. The goal is to use all functionalities you can do in class components in functional style components, We heavily use functional components in our project so in order to use things like State we have two options: re-writing our component using class components or simply use a package called <code>react-powerplug</code>:</p>\n<pre><code class=\"language-typescript\">import * as React from \"react\"\nimport { State } from \"react-powerplug\"\n\nconst Example = () => {\n  return (\n    &#x3C;State\n      initial={{\n        count: 0,\n      }}\n    >\n      {({ state, setState }) => (\n        &#x3C;div>\n          &#x3C;p>You clicked {state.count} times&#x3C;/p>\n          &#x3C;button onClick={() => setState({ count: state.count + 1 })}>\n            Click me\n          &#x3C;/button>\n        &#x3C;/div>\n      )}\n    &#x3C;/State>\n  )\n}\n\nexport { Example }\n</code></pre>\n<p>It is great, but we don't need to have this anymore because one of the features provided by Hooks in the new version of React is ability to have state inside a functional component. Here's the same example using React Hooks:</p>\n<pre><code class=\"language-typescript\">import { useState } from \"react\"\nimport * as React from \"react\"\n\nexport interface ReactHookProps {}\n\nconst ReactHook = (props: ReactHookProps) => {\n  const [count, setCount] = useState(0)\n\n  return (\n    &#x3C;div>\n      &#x3C;h1>Hello From ReactHook Component&#x3C;/h1>\n      &#x3C;p>You clicked {count} times&#x3C;/p>\n      &#x3C;button onClick={() => setCount(count + 1)}>Click me&#x3C;/button>\n    &#x3C;/div>\n  )\n}\n\nexport { ReactHook }\n</code></pre>\n<p>As you can see, by calling <code>useState</code> and passing a default value, it gives you two properties; one for <code>get</code> and the other for <code>set</code>. The interesting point about <code>useState</code> is that we can have multiple states inside the component:</p>\n<pre><code class=\"language-typescript\">const [person, setPerson] = useState({\n  firstName: \"Sirwan\",\n  lastName: \"Afifi\",\n  age: 29,\n})\n</code></pre>\n<p>Working with state is just one of <code>Hooks</code> functionalities, I will try to blog about the other features too.</p>\n<p>You can grab the working sample project from <a href=\"https://github.com/SirwanAfifi/react-hooks.git\">GitHub</a>.</p>\n<p>Happy coding :)</p>"}},"pageContext":{"slug":"React-Hooks/"}},"staticQueryHashes":[]}