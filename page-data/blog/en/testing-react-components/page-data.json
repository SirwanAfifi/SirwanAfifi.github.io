{"componentChunkName":"component---src-templates-blog-details-js","path":"/blog/en/testing-react-components","result":{"data":{"markdownRemark":{"timeToRead":3,"frontmatter":{"date":"October 2nd, 2019","title":"Testing React Components","tags":["React"],"slug":"Testing-React-Components/"},"html":"<p><code>create-react-app</code> comes with a built-in test runner called <code>Jest</code> which is basically a tool for executing unite tests and also reporting the result. To run the test files in projects, all we need to do is type in <code>npm run test</code> command. This command searches for all test files in the project and executes them one after another. Once the tests have been run, it enters into watch mode, which means that whenever we change the test files in goes and re-run them.</p>\n<p>There are two approaches that we can use for testing a component:</p>\n<ul>\n<li>Shallow rendering</li>\n<li>Full rendering</li>\n</ul>\n<h1>Shallow rendering</h1>\n<p>Shallow rendering allows us to render a component without rendering its children. It means that it isolates the component from its children. This type of rendering makes more sense when testing a component's functionality. For example, let's say we have a blog application and want to check if the <code>App</code> component contains a header:</p>\n<pre><code class=\"language-js\">import React from \"react\"\nimport Adapter from \"enzyme-adapter-react-16\"\nimport Enzyme, { shallow } from \"enzyme\"\nimport App from \"./App\"\nimport { Header } from \"./components/Header\"\n\nEnzyme.configure({ adapter: new Adapter() })\n\nit(\"renders app component\", () => {\n  const wrapper = shallow(&#x3C;App />)\n  const header = &#x3C;Header />\n  expect(wrapper.contains(header)).toEqual(true)\n})\n</code></pre>\n<p>Since the test is using shallow rendering, the child components are not used to render it means that only the <code>App</code> component's state and props are used for when rendering the content and its children are not rendered:</p>\n<pre><code class=\"language-js\">&#x3C;Fragment>\n  &#x3C;div className=\"columns\">\n    &#x3C;div className=\"column\">\n      &#x3C;Header />\n    &#x3C;/div>\n  &#x3C;/div>\n  &#x3C;div className=\"container\">\n    &#x3C;div className=\"columns\">\n      &#x3C;div className=\"column is-8\">\n        &#x3C;List />\n      &#x3C;/div>\n      &#x3C;div className=\"column is-4\">\n        &#x3C;AuthorList />\n      &#x3C;/div>\n    &#x3C;/div>\n  &#x3C;/div>\n&#x3C;/Fragment>\n</code></pre>\n<h1>Full rendering</h1>\n<p>Full rendering means that the <code>App</code> component children are fully rendered:</p>\n<pre><code class=\"language-js\">it(\"renders app component\", () => {\n  const wrapper = mount(&#x3C;App />)\n  const header = &#x3C;Header />\n  expect(wrapper.contains(header)).toEqual(true)\n})\n</code></pre>\n<p>Which produeces the following output.</p>\n<pre><code class=\"language-html\">&#x3C;App>\n  &#x3C;div className=\"columns\">\n    &#x3C;div className=\"column\">\n      &#x3C;header>\n        &#x3C;nav className=\"navbar is-primary\">\n          &#x3C;div className=\"navbar-brand\">\n            &#x3C;a className=\"navbar-item\" href=\"https://myblog.com\">\n              &#x3C;h1>\n                My Blog\n              &#x3C;/h1>\n            &#x3C;/a>\n            &#x3C;div className=\"navbar-burger burger\">\n              &#x3C;span />\n              &#x3C;span />\n              &#x3C;span />\n            &#x3C;/div>\n          &#x3C;/div>\n          &#x3C;div className=\"navbar-menu\">\n            &#x3C;div className=\"navbar-start\">\n              &#x3C;a className=\"navbar-item\" href=\"/home\">\n                Home\n              &#x3C;/a>\n              &#x3C;a className=\"navbar-item\" href=\"/posts\">\n                Posts\n              &#x3C;/a>\n            &#x3C;/div>\n          &#x3C;/div>\n        &#x3C;/nav>\n      &#x3C;/header>\n    &#x3C;/div>\n  &#x3C;/div>\n  &#x3C;div className=\"container\">\n    &#x3C;div className=\"columns\">\n      &#x3C;div className=\"column is-8\">\n        &#x3C;List>\n          &#x3C;h1 className=\"title\">\n            Latest posts\n          &#x3C;/h1>\n          &#x3C;div className=\"box\">\n            &#x3C;ActionButton text=\"Sort\" callback=\"{[Function]}\">\n              &#x3C;button className=\"button is-primary\" onClick=\"{[Function]}\">\n                Sort\n              &#x3C;/button>\n            &#x3C;/ActionButton>\n          &#x3C;/div>\n          &#x3C;div id=\"boxDiv\" className=\"box\">\n            &#x3C;Post post=\"{{...}}\">\n              &#x3C;div className=\"panel\">\n                &#x3C;p className=\"panel-heading\">\n                  Post1\n                &#x3C;/p>\n                &#x3C;section className=\"panel-block\">\n                  &#x3C;p>\n                    Hello\n                  &#x3C;/p>\n                &#x3C;/section>\n              &#x3C;/div>\n            &#x3C;/Post>\n            &#x3C;Post post=\"{{...}}\">\n              &#x3C;div className=\"panel\">\n                &#x3C;p className=\"panel-heading\">\n                  Post2\n                &#x3C;/p>\n                &#x3C;section className=\"panel-block\">\n                  &#x3C;p>\n                    Hello\n                  &#x3C;/p>\n                &#x3C;/section>\n              &#x3C;/div>\n            &#x3C;/Post>\n            &#x3C;Post post=\"{{...}}\">\n              &#x3C;div className=\"panel\">\n                &#x3C;p className=\"panel-heading\">\n                  Post3\n                &#x3C;/p>\n                &#x3C;section className=\"panel-block\">\n                  &#x3C;p>\n                    Hello\n                  &#x3C;/p>\n                &#x3C;/section>\n              &#x3C;/div>\n            &#x3C;/Post>\n            &#x3C;Post post=\"{{...}}\">\n              &#x3C;div className=\"panel\">\n                &#x3C;p className=\"panel-heading\">\n                  Post4\n                &#x3C;/p>\n                &#x3C;section className=\"panel-block\">\n                  &#x3C;p>\n                    Hello\n                  &#x3C;/p>\n                &#x3C;/section>\n              &#x3C;/div>\n            &#x3C;/Post>\n          &#x3C;/div>\n        &#x3C;/List>\n      &#x3C;/div>\n      &#x3C;div className=\"column is-4\">\n        &#x3C;AuthorList>\n          &#x3C;h1 className=\"title\">\n            Authors\n          &#x3C;/h1>\n          &#x3C;ul className=\"list\">\n            &#x3C;a href=\"/\" className=\"list-item\">\n              Sirwan Afifi\n            &#x3C;/a>\n          &#x3C;/ul>\n        &#x3C;/AuthorList>\n      &#x3C;/div>\n    &#x3C;/div>\n  &#x3C;/div>\n&#x3C;/App>\n</code></pre>"}},"pageContext":{"slug":"Testing-React-Components/"}},"staticQueryHashes":[]}