{"componentChunkName":"component---src-templates-post-js","path":"/archive/2016/04/17/Why-Angular/","webpackCompilationHash":"d39a2da4e6c6b71201ce","result":{"data":{"markdownRemark":{"frontmatter":{"formattedDate":"2016/04/17","date":"April 17th, 2016","title":"Why AngularJS?","tags":["Angular.js","JavaScript"],"slug":"Why-Angular/"},"html":"<p>I wanted to share a few thoughts about AngularJS</p>\n<h3>Introduction</h3>\n<p>AngularJS is a MV* framework for writing manageable, clean, full-featured applications in the browser with JavaScript , It's also incredibly easy to learn for those who already have HTML and JavaScript experience. Angular's goal was to create a way for designers to be able to do HTML design using components. One thing that I like about Angular is that, it's an opinionated MV* framework, It means that it tells you what are the certain ways of doing things, Some people might argue that it's somehow a limitation for a framework such as Angular because it solves fewer problems, but I think at least it assures to not having spaghetti code.</p>\n<h3>How I got into AngularJS</h3>\n<p>I have been sitting on the fence for far too long to chose a great JavaScript framework. Finally a couple of years ago I decided to use AngularJS, and it caught my attention. It actually made me curious to learn more about it. I started to use AngularJS for some parts of my application. At the time Angular team were working on the next version of the framework, So I stopped using it because I heard that the next version is a different framework. Now I have come to the conclusion that it's better to stick with Angular 1.x, then I can switch to Angular 2 in a right time.</p>\n<h3>AngularJS Benefites</h3>\n<p>Angular has lots of great features from testability and two-way binding, to more vague concepts. For me, the best thing about Angular is that it has a flat learning curve So you can get the most of it. All being said here are the some of my favourite features and benefits of Angular:</p>\n<ul>\n<li>Code Reduction: Angular reduces the amount of code that developers write.</li>\n<li>Two Way Binding</li>\n<li>Beautiful syntax and higher-level APIs</li>\n</ul>\n<p>For example, take a look this piece of code written in raw JavaScript:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clicked!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Whereas with Angular you can simple achieve same goal this way:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">;</span><span class=\"token operator\">&lt;</span>button id<span class=\"token operator\">=</span><span class=\"token string\">\"btn\"</span> ng<span class=\"token operator\">-</span>click<span class=\"token operator\">=</span><span class=\"token string\">\"handleClick()\"</span><span class=\"token operator\">></span>\n  Click Me\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n\n$scope<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clicked!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>As you can see the Angular code is less complex.</p>\n<ul>\n<li>Popularity</li>\n<li>Testability<br>\nAngular was designed with testing in mind. So you can test any components of your application easily through both <a href=\"https://docs.angularjs.org/guide/unit-testing\">unit testing</a> and <a href=\"https://docs.angularjs.org/guide/e2e-testing\">end to end</a> testing. For unit testing you can use a component called <a href=\"https://docs.angularjs.org/api/ngMock\">ngMock</a> and for e2e testing you can use <a href=\"https://github.com/angular/protractor\">Protractor</a>. It is worthwhile to mention that for both cases you can run your tests using a tool called Karma.</li>\n</ul>\n<h3>AngularJS gotchas</h3>\n<p>Although Angular is a great framework but it has some problems that you can run into trouble with it. Here are some of them:</p>\n<ul>\n<li>SEO<br>\nFor dealing with this issue we can use server side rendering or use a <a href=\"https://prerender.io/\">prerenderer</a>,</li>\n<li>Performance<br>\nOne thing that causes performance problem in Angular is having too many bindings. If performance is important you can consider using a different rendering engine.</li>\n<li>External Events and Digest Cycle</li>\n</ul>\n<h3>Conclusion</h3>\n<p>Even though Angular 2 is coming, But Angular 1 is still a thing and I think Angular 1 will be supported for a long time to come.</p>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"2016-04-17-Why-Angular"}}}